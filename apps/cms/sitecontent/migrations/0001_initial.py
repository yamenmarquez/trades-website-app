# Generated by Django 5.2.5 on 2025-08-27 23:01

import django.db.models.deletion
import wagtail.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('wagtailcore', '0095_groupsitepermission'),
        ('wagtailimages', '0027_image_description'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProjectIndexPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('intro', wagtail.fields.RichTextField(blank=True)),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('slug', models.SlugField(unique=True)),
                ('description', wagtail.fields.RichTextField(blank=True)),
                ('icon', models.CharField(blank=True, max_length=40)),
            ],
        ),
        migrations.CreateModel(
            name='Testimonial',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=120)),
                ('rating', models.PositiveSmallIntegerField(default=5)),
                ('text', models.TextField()),
                ('source', models.URLField(blank=True)),
            ],
        ),
        migrations.CreateModel(
            name='Theme',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=64)),
                ('brand_color', models.CharField(default='#0ea5e9', max_length=7)),
                ('accent', models.CharField(default='#22c55e', max_length=7)),
                ('neutral', models.CharField(default='#0f172a', max_length=7)),
                ('font_heading', models.CharField(default='Inter', max_length=64)),
                ('font_body', models.CharField(default='Inter', max_length=64)),
                ('radius', models.CharField(default='1rem', max_length=8)),
                ('layout_variant', models.CharField(default='bold-build', max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='MediaAsset',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt', models.CharField(blank=True, max_length=160)),
                ('tags', models.CharField(blank=True, max_length=160)),
                ('width', models.IntegerField(blank=True, null=True)),
                ('height', models.IntegerField(blank=True, null=True)),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to='wagtailimages.image')),
            ],
        ),
        migrations.CreateModel(
            name='ProjectPage',
            fields=[
                ('page_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='wagtailcore.page')),
                ('city', models.CharField(blank=True, max_length=120)),
                ('date', models.DateField(blank=True, null=True)),
                ('gallery', wagtail.fields.StreamField([('image', 0)], blank=True, block_lookup={0: ('wagtail.images.blocks.ImageChooserBlock', (), {})})),
                ('description', wagtail.fields.RichTextField(blank=True)),
                ('services', models.ManyToManyField(blank=True, to='sitecontent.service')),
            ],
            options={
                'abstract': False,
            },
            bases=('wagtailcore.page',),
        ),
    ]
